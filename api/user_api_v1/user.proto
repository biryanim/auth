syntax = "proto3";

package user_api_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/biryanim/auth/pkg/user_api_v1;user_api_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "User API"
        version: "1.0.0"
        contact: {
            name: "Arsen Yunusov"
            email: "ayunusov42@gmail.com"
        };
    };

    host: "localhost:8080",
    schemes: HTTP,
    schemes: HTTPS,
    consumes: "application/json",
    produces: "application/json",
};

service UserAPIV1 {
    rpc Create(CreateRequest) returns (CreateResponse){
        option (google.api.http) = {
            post: "/user/v1/create"
            body: "*"
        };
    }

    rpc Get(GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/user/v1"
        };
    }

    rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            patch: "/user/v1"
            body: "*"
        };
    }

    rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/user/v1"
        };
    }
}

enum Role{
    UNKNOWN_ROLE_TYPE = 0;
    user = 1;
    admin = 2;
}

message UserInfo {
    string name = 1 [(validate.rules).string = {min_len: 5, max_len: 64}];
    string username = 2 [(validate.rules).string = {ignore_empty: false}];
    string email = 3 [(validate.rules).string.email = true];
    Role role = 4;
}

message User {
    int64 id = 1;
    UserInfo info = 2;
    google.protobuf.Timestamp created_at = 3;
    google.protobuf.Timestamp updated_at = 4;
}

message UpdateUserInfo {
    google.protobuf.StringValue name = 1;
    google.protobuf.StringValue email = 2;
}

message CreateRequest {
    UserInfo info = 1;
    string password = 2 [(validate.rules).string = {
        min_len: 8,
        max_len: 64
    }];
    string password_confirm = 3;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
    int64 id = 1;
}

message GetResponse {
    User user = 1;
}

message UpdateRequest {
    int64 id = 1;
    UpdateUserInfo info = 2;
}

message DeleteRequest {
    int64 id = 1;
}